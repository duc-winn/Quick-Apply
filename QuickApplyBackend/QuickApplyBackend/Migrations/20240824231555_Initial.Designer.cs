// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QuickApplyBackend.Database_Context;

#nullable disable

namespace QuickApplyBackend.Migrations
{
    [DbContext(typeof(QuickApplyContext))]
    [Migration("20240824231555_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QuickApplyBackend.Model.AppliedJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<string>>("ApplyLinks")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("CompanyIconUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormattedJobFunctions")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PositionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostDateAndTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("SkillsRequired")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("SpecificLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AppliedJobTable", (string)null);
                });

            modelBuilder.Entity("QuickApplyBackend.Model.EmployeeReferal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobDepartment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JobReferenceId")
                        .HasColumnType("integer");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SeniorityLevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("JobReferenceId");

                    b.ToTable("EmployeeReferal");
                });

            modelBuilder.Entity("QuickApplyBackend.Model.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<string>>("ApplyLinks")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("CompanyIconUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormattedJobFunctions")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PositionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostDateAndTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("SkillsRequired")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("SpecificLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("JobTable", (string)null);
                });

            modelBuilder.Entity("QuickApplyBackend.Model.JobReference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("JobReferenceTable", (string)null);
                });

            modelBuilder.Entity("QuickApplyBackend.Model.User", b =>
                {
                    b.Property<string>("userId")
                        .HasColumnType("text");

                    b.Property<string>("passwordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("userId");

                    b.ToTable("UserTable", (string)null);
                });

            modelBuilder.Entity("QuickApplyBackend.Model.EmployeeReferal", b =>
                {
                    b.HasOne("QuickApplyBackend.Model.JobReference", "JobReference")
                        .WithMany("ListOfReferal")
                        .HasForeignKey("JobReferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobReference");
                });

            modelBuilder.Entity("QuickApplyBackend.Model.JobReference", b =>
                {
                    b.Navigation("ListOfReferal");
                });
#pragma warning restore 612, 618
        }
    }
}
